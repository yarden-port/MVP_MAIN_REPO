name: CI
on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        default: staging
        description: "Environment to deploy service to"
        type: string
      port_payload:
        required: true
        description: "Port's payload, including details for who triggered the action and general context (blueprint, run id, etc...)"
        type: string
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: echo-deploy
        run: echo "deploy"

  report-deployment:
    name: Report new deployment Entity
    runs-on: ubuntu-latest
    steps:
      - name: Extract SHA short
        run: echo "SHA_SHORT=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
      - name: "Create new image"
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          identifier: ${{fromJson(inputs.port_payload).context.entity}}
          blueprint: image
          properties: |
            {
               "title": "${{fromJson(inputs.port_payload).context.entity}}",
               "tags": "1",
               "image_branch": "master"
            }
      
      - name: "create new running_service"
        id: "new-running-service"
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          identifier: ${{fromJson(inputs.port_payload).context.entity}}-${{ inputs.environment }}
          blueprint: running_service
          properties: |
            {
               "syncStatus": "Synced",
               "healthStatus": "Healthy"
            }
          relations: |
            {
              "image": "${{fromJson(inputs.port_payload).context.entity}}",
              "environment": "${{ inputs.environment }}"

            }
      - name: Print output from new-running-service
        run: echo "The output of new-running-service is ${{ steps.new-running-service.outputs.entity }}"

      - name: Set the test image
        id: set-dev
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: UPSERT
          identifier: ${{fromJson(github.event.inputs.port_payload).context.entity }}
          blueprint: service
          runId: ${{ fromJson(github.event.inputs.port_payload).context.runId }}
          logMessage: "Updating the test image..."          
          relations: |
            {
              "test_runtime": "${{ fromJson(steps.new-running-service.outputs.entity).identifier }}"
            }